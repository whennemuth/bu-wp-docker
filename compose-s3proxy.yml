version: '3.9'

services:

  db:
    extends:
      file: docker-compose.yml
      service: db

  s3proxy:
    image: public.ecr.aws/bostonuniversity-nonprod/aws-sigv4-proxy
    container_name: s3proxy
    restart: always
    ports:
      - '8080:8080'
    command: 
      - "-v"
      - "--name"
      - "s3-object-lambda"
      - "--region"
      - "${OLAP_REGION}"
      - "--no-verify-ssl"
      - "--host"
      - "${OLAP}-${OLAP_ACCT_NBR}.s3-object-lambda.${OLAP_REGION}.amazonaws.com"
    environment:
      healthcheck_path: '/s3proxy-healthcheck'
      AWS_ACCESS_KEY_ID: ${S3_UPLOADS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_UPLOADS_SECRET_ACCESS_KEY}
      REGION: ${S3_UPLOADS_REGION}
    networks:
      wp-bridge:

  shibsp:
    image: ${DOCKER_REGISTRY}/bu-shibboleth-sp 
    container_name: sp    
    environment:
      TZ: UTC
      AWS_PROFILE: ${AWS_PROFILE}
      EXPRESS_PORT: ${SP_PORT:-5000}
      ENTITY_ID: ${ENTITY_ID}
      IDP_CERT: ${IDP_CERT}
      ENTRY_POINT: ${ENTRY_POINT}
      LOGOUT_URL: ${LOGOUT_URL}
      SAML_CERT: ${SAML_CERT}
      SAML_PK: ${SAML_PK}
      APP_HOST: wordpress
      # DEBUG: 'true'
    ports:
      - '${SP_PORT:-5000}:${SP_PORT:-5000}'
    networks:
      wp-bridge:

  wordpress:
    extends:
      file: docker-compose.yml
      service: wordpress
    environment:
      S3PROXY_HOST: http://s3proxy:8080

networks:
  wp-bridge:
    driver: bridge
volumes:
  db_data: {}
