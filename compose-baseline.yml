# compose-baseline.yml
#
# This Docker Compose file defines the baseline configuration for our application.
# It sets up a MariaDB database and a WordPress service, both of which are essential components of our application.
# Other Docker Compose files in this project may extend the services defined in this file
# to add additional configurations or override certain settings.
#
# Services:
# - db: A MariaDB database service. This is where our WordPress installation will store its data.
# - wordpress: A WordPress service. This is our main application.
#
# Networks:
# - wp-bridge: A network that allows our services to communicate with each other.
#
# Volumes:
# - db_data: A volume that persists our database data across container restarts.
#
# Note: This file uses environment variables for certain settings, such as the database password. These should be set in your environment before running Docker Compose.

version: '3.1'

services:

  db:
    image: mariadb:latest
    restart: always
    container_name: mysql
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD:-password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
    networks:
      wp-bridge:

  wordpress:
    env_file:
      - .env
      - .env.shibless
    depends_on:
      - db
    build: ./wordpress-baseline
    image: ${DOCKER_REGISTRY}/bu-wordpress-baseline
    container_name: wordpress
    restart: always
    hostname: dev.kualitest.research.bu.edu
    ports:
      - '443:443'
      - '80:80'
    environment:
      SERVER_NAME: dev.kualitest.research.bu.edu
      TZ: America/New_York
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD:-password}
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: true
      WP_CLI_ALLOW_ROOT: true
    volumes:
      - ./wordpress-baseline/sandbox/:/var/www/html/
      - ./wordpress-baseline/logs-apache:/var/log/apache2
    networks:
      wp-bridge:

networks:
  wp-bridge:
    driver: bridge
volumes:
  db_data: {}
